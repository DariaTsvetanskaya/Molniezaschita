<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAMAAAD8CC+4AAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABK2lDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAACjPY2BgMnB0cXJlEmBgyM0rKQpyd1KIiIxSYD/PwMbAzAAGicnFBY4BAT4gdl5+XioDBvh2jYER
        RF/WBZnFQBrgSi4oKgHSf4DYKCW1OJmBgdEAyM4uLykAijPOAbJFkrLB7A0gdlFIkDOQfQTI5kuHsK+A
        2EkQ9hMQuwjoCSD7C0h9OpjNxAE2B8KWAbFLUitA9jI45xdUFmWmZ5QoGFpaWio4puQnpSoEVxaXpOYW
        K3jmJecXFeQXJZakpgDVQtwHBoIQhaAQ0wBqtNBkoDIAxQOE9TkQHL6MYmcQYgiQXFpUBmUyMhkT5iPM
        mCPBwOC/lIGB5Q9CzKSXgWGBDgMD/1SEmJohA4OAPgPDvjkAwMZP/eeaqagAAAMAUExURf///wAAAAIC
        AgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4ODg8PDxAQEBERERISEhMTExQUFBUVFRYW
        FhcXFxgYGBkZGRoaGhsbGxwcHB0dHR4eHh8fHyAgICEhISIiIiMjIyQkJCUlJSYmJicnJygoKCkpKSoq
        KisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMzMzQ0NDU1NTY2Njc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+
        Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdHR0hISElJSUpKSktLS0xMTE1NTU5OTk9PT1BQUFFRUVJS
        UlNTU1RUVFVVVVZWVldXV1hYWFlZWVpaWltbW1xcXF1dXV5eXl9fX2BgYGFhYWJiYmNjY2RkZGVlZWZm
        ZmdnZ2hoaGlpaWpqamtra2xsbG1tbW5ubm9vb3BwcHFxcXJycnNzc3R0dHV1dXZ2dnd3d3h4eHl5eXp6
        ent7e3x8fH19fX5+fn9/f4CAgIGBgYKCgoODg4SEhIWFhYaGhoeHh4iIiImJiYqKiouLi4yMjI2NjY6O
        jo+Pj5CQkJGRkZKSkpOTk5SUlJWVlZaWlpeXl5iYmJmZmZqampubm5ycnJ2dnZ6enp+fn6CgoKGhoaKi
        oqOjo6SkpKWlpaampqenp6ioqKmpqaqqqqurq6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2
        tre3t7i4uLm5ubq6uru7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPDw8TExMXFxcbGxsfHx8jIyMnJycrK
        ysvLy8zMzM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT09TU1NXV1dbW1tfX19jY2NnZ2dra2tvb29zc3N3d3d7e
        3t/f3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy
        8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v///5Vx4l4AAAAJcEhZcwAACxMAAAsT
        AQCanBgAABI1SURBVHhe7ZzRmuu6boP3ef+XPoZEZ5RYouGZZYei8PfrhOaCEwJoL3rR858QQgghhBBC
        CCGEEEIIIYQQQgghhPgO//ufDWIV/rdho/ghdyxwp9Y/SZ5KsafWP0geSrGn0t/JHkr1p9Zb0mdiBtV6
        Q/pIzKBKf2GBrFC6Wt+xPJYoXa0XLAxgm4SYQWCblbEkKrZLSLVX/i5fu6VQYrCPnJhJfKxees1gwx7K
        MiOtyUpZ30jMLM08eD2XYTaKBYZr6tyULOYtvXiguKrPS01i4+1hIooLissvJMVyAB+P81CMMJge2GY9
        zP9OZzUH9exiySjrN/rr922Zj1+WieKzpbucCP/82d3dhEpfkASlO/fP7u4mJo8F56v0q8wei3//7O5u
        YvZY/Ptnd3cT06ei0q8zfSwq/Reo9AWZPBa/VpXeZfZY/PNVepcEpTv3z+7uJqaPRaVfR6WviEpfkMlj
        8WtV6X1U+npMn8pZ5yr9yPSxePfDnEo/Mnss/v2zu7uJ2VNR6b9ApS/I7LH498/u7iZmj8U/X6V3UekL
        Mn0sKv0606fiGlDpXVT6gkwfi0q/TurOVXqf2WNR6b9Bpa/H7LH498/u7iZmj8W/f3Z3NzF9LCr9F8xf
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>